#本地开发环境
env.local=${env.local}

zookeeper.host=${zookeeper.host}
zookeeper.port=${zookeeper.port}
ds.redis.host=${ds.redis.host}
ds.redis.port=${ds.redis.port}

ds.db.jdbctype=${ds.db.jdbctype}
ds.db.driver=${ds.db.driver}
ds.db.host=${ds.db.host}
ds.db.port=${ds.db.port}
ds.db.dbname=${ds.db.dbname}
ds.db.username=${ds.db.username}
ds.db.password=${ds.db.password}
#数据接口同步时线上切换线下的数据库  线下的切换到线上的数据库
ds.db.dbname2=${ds.db.dbname2}

schd.db.jdbctype=${schd.db.jdbctype}
schd.db.driver=${schd.db.driver}
schd.db.host=${schd.db.host}
schd.db.port=${schd.db.port}
schd.db.dbname=${schd.db.dbname}
schd.db.username=${schd.db.username}
schd.db.password=${schd.db.password}

#hive元数据的数据库配置
hivemeta.db.jdbctype=${hivemeta.db.jdbctype}
hivemeta.db.driver=${hivemeta.db.driver}
hivemeta.db.host=${hivemeta.db.host}
hivemeta.db.port=${hivemeta.db.port}
hivemeta.db.dbname=${hivemeta.db.dbname}
hivemeta.db.username=${hivemeta.db.username}
hivemeta.db.password=${hivemeta.db.password}

#mysql元数据的数据库配置
mysqlmeta.db.jdbctype=${mysqlmeta.db.jdbctype}
mysqlmeta.db.driver=${mysqlmeta.db.driver}
mysqlmeta.db.host=${mysqlmeta.db.host}
mysqlmeta.db.port=${mysqlmeta.db.port}
mysqlmeta.db.dbname=${mysqlmeta.db.dbname}
mysqlmeta.db.username=${mysqlmeta.db.username}
mysqlmeta.db.password=${mysqlmeta.db.password}


dw.db.jdbctype=${dw.db.jdbctype}
dw.db.driver=${dw.db.driver}
dw.db.host=${dw.db.host}
dw.db.port=${dw.db.port}
dw.db.dbname=${dw.db.dbname}
dw.db.username=${dw.db.username}
dw.db.password=${dw.db.password}

dw116.db.jdbctype=postgresql
dw116.db.driver=org.postgresql.Driver
dw116.db.host=10.37.5.116
dw116.db.port=5432
dw116.db.dbname=dw
dw116.db.username=postgres
dw116.db.password=postgres

dw242.db.jdbctype=${dw242.db.jdbctype}
dw242.db.driver=${dw242.db.driver}
dw242.db.host=${dw242.db.host}
dw242.db.port=${dw242.db.port}
dw242.db.dbname=${dw242.db.dbname}
dw242.db.username=${dw242.db.username}
dw242.db.password=${dw242.db.password}

es.db.jdbctype=${es.db.jdbctype}
es.db.driver=${es.db.driver}
es.db.host=${es.db.host}
es.db.port=${es.db.port}
es.db.dbname=${es.db.dbname}
es.db.username=${es.db.username}
es.db.password=${es.db.password}

#presto查询的数据源
presto.db.jdbctype=${presto.db.jdbctype}
presto.db.driver=${presto.db.driver}
presto.db.host=${presto.db.host}
presto.db.port=${presto.db.port}
presto.db.dbname=${presto.db.dbname}
presto.db.username=${presto.db.username}
presto.db.password=${presto.db.password}


#mysql查询的数据源
mysql.db.jdbctype=${mysql.db.jdbctype}
mysql.db.driver=${mysql.db.driver}
mysql.db.host=${mysql.db.host}
mysql.db.port=${mysql.db.port}
mysql.db.dbname=${mysql.db.dbname}
mysql.db.username=${mysql.db.username}
mysql.db.password=${mysql.db.password}!

hive.db.url=${hive.db.url}
hive.db.driver=${hive.db.driver}
hive.db.username=${hive.db.username}
hive.db.password=${hive.db.password}

es.cluster.name=${es.cluster.name}
es.cluster.hosts=${es.cluster.hosts}

boss.login.url=${boss.login.url}

export.user.path=${export.user.path}

export.user.pre.url=${export.user.pre.url}

#httpclient config
httpclient.default_max_per_route=${httpclient.default_max_per_route}
httpclient.max_total=${httpclient.max_total}
httpclient.connect_timeout=${httpclient.connect_timeout}
httpclient.socket_timeout=${httpclient.socket_timeout}
httpclient.connect_timeout_inner=${httpclient.connect_timeout_inner}
httpclient.socket_timeout_inner=${httpclient.socket_timeout_inner}
httpclient.retry_num=${httpclient.retry_num}
httpclient.sleep_time=${httpclient.sleep_time}


# Redis settings
redis.host=${redis.host}
redis.port=${redis.port}
redis.maxIdle=${redis.maxIdle}
redis.minIdle=${redis.minIdle}
redis.maxTotal=${redis.maxTotal}
redis.password=${redis.password}
redis.maxWait=${redis.maxWait}
redis.testOnBorrow=${redis.testOnBorrow}

jboss.user.sessionId=${jboss.user.sessionId}
jboss.domain=${jboss.domain}

druid.query.url=${druid.query.url}
druid.timeused.insert.url=${druid.timeused.insert.url}
es.query.url=${es.query.url}




es.xpack.url=${es.xpack.url}

syn.data.script.command=${syn.data.script.command}

#******************************************redis集群配置*********************************************
#最大连接数，（根据并发请求合理设置）
redis.pool.maxTotal=${redis.pool.maxTotal}
#最大空闲数，（根据并发请求合理设置）
redis.pool.maxIdle=${redis.pool.maxIdle}
#设置最小空闲连接数或者说初始化连接数
redis.pool.minIdle=${redis.pool.minIdle}
#最大等待时间：单位ms
redis.pool.maxWaitMillis=${redis.pool.maxWaitMillis}
#使用连接时，检测连接是否成功
redis.pool.testOnBorrow=${redis.pool.testOnBorrow}
#返回连接时，检测连接是否成功
redis.pool.testOnReturn=${redis.pool.testOnReturn}
#空闲时，检测连接是否成功
redis.pool.testWhileIdle=${redis.pool.testWhileIdle}
#多长空闲时间之后回收空闲连接
redis.pool.timeBetweenEvictionRunsMillis=${redis.pool.timeBetweenEvictionRunsMillis}
#最小的回收空闲时间
redis.pool.minEvictableIdleTimeMillis=${redis.pool.minEvictableIdleTimeMillis}

#服务密码
redis.client.password=${redis.client.password}
#库号
redis.client.database=${redis.client.database}
#会话超时时间
redis.client.soTimeoutMs=${redis.client.soTimeoutMs}
#连接超时时间
redis.client.connectionTimeoutMs=${redis.client.connectionTimeoutMs}

#zookeeper服务地址
redis.zookeeper.servers=${redis.zookeeper.servers}
#codis中配置项目名称
redis.product.name=${redis.product.name}

redis.beanClass=${redis.beanClass}
#******************************************redis集群配置*********************************************



#*********kafka连接信息*************

kafka.bootstrap.servers=${kafka.bootstrap.servers}
kafka.retries=${kafka.retries}
kafka.zookeeper.connect=${kafka.zookeeper.connect}

#通用数据接口的调用埋点信息
kafka.commondata.topic=${kafka.commondata.topic}

#各种报表的点击事件&访问事件的埋点信息
kafka.track.topic=${kafka.track.topic}




#redisCluster配置
redis.cluster.node1.ip=${redis.cluster.node1.ip}
redis.cluster.node1.port=${redis.cluster.node2.port}

redis.cluster.node2.ip=${redis.cluster.node2.ip}
redis.cluster.node2.port=${redis.cluster.node2.port}

redis.cluster.node3.ip=${redis.cluster.node3.ip}
redis.cluster.node3.port=${redis.cluster.node3.port}

redis.cluster.node4.ip=${redis.cluster.node4.ip}
redis.cluster.node4.port=${redis.cluster.node4.port}

redis.cluster.node5.ip=${redis.cluster.node5.ip}
redis.cluster.node5.port=${redis.cluster.node5.port}

redis.cluster.node6.ip=${redis.cluster.node6.ip}
redis.cluster.node6.port=${redis.cluster.node6.port}


#最大连接数，（根据并发请求合理设置）
redis.cluster.maxTotal=${redis.cluster.maxTotal}
#最大空闲数，（根据并发请求合理设置）
redis.cluster.maxIdle=${redis.cluster.maxIdle}
#设置最小空闲连接数或者说初始化连接数
redis.cluster.minIdle=${redis.cluster.minIdle}
#最大等待时间：单位ms
redis.cluster.maxWaitMillis=${redis.cluster.maxWaitMillis}
#使用连接时，检测连接是否成功
redis.cluster.testOnBorrow=${redis.cluster.testOnBorrow}
#返回连接时，检测连接是否成功
redis.cluster.testOnReturn=${redis.cluster.testOnReturn}
#空闲时，检测连接是否成功
redis.cluster.testWhileIdle=${redis.cluster.testWhileIdle}
#多长空闲时间之后回收空闲连接
redis.cluster.timeBetweenEvictionRunsMillis=${redis.cluster.timeBetweenEvictionRunsMillis}
#最小的回收空闲时间
redis.cluster.minEvictableIdleTimeMillis=${redis.cluster.minEvictableIdleTimeMillis}

redis.cluster.timeout=${redis.cluster.timeout}
redis.cluster.maxRedirections=${redis.cluster.maxRedirections}

redis.cluster.prefix=${redis.cluster.prefix}